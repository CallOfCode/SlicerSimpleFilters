{
  "name" : "RealAndImaginaryToComplexImageFilter",
  "itk_name" : "ComposeImageFilter",
  "template_code_filename" : "ImageFilter",
  "template_test_filename" : "ImageFilter",
  "number_of_inputs" : 2,
  "doc" : "Some global documentation",
  "pixel_types" : "RealPixelIDTypeList",
  "filter_type" : "itk::ComposeImageFilter<InputImageType, OutputImageType>",
  "output_pixel_type" : "std::complex<typename InputImageType::PixelType>",
  "members" : [],
  "tests" : [
    {
      "tag" : "defaults",
      "description" : "Test defaults",
      "md5hash" : "1129328e636444d9df8000a1bdebddce",
      "settings" : [],
      "inputs" : [
        "Input/RA-Slice-Float.nrrd",
        "Input/RA-Slice-Float.nrrd"
      ]
    }
  ],
  "briefdescription" : " ComposeImageFiltercombine several scalar images into a multicomponent image.\n",
  "detaileddescription" : " ComposeImageFiltercombine several scalar images into an itk::Imageof vector pixel ( itk::Vector, itk::RGBPixel, ...), of std::complex pixel, or in an itk::VectorImage.\n\\par Inputs and Usage\nfilter->SetInput(0,image0);filter->SetInput(1,image1);...filter->Update(); itk::VectorImage< PixelType, dimension >::Pointer=filter->GetOutput();All input images are expected to have the same template parameters and have the same size and origin.\n\\see  VectorImage\n\\see \n\\see  VectorIndexSelectionCastImageFilter\n\\par Wiki Examples:\n\n\\li All Examples\n\\li Create a vector image from a collection of scalar images\n\\li Compose a vector image (with 3 components) from three scalar images\n\\li Convert a real image and an imaginary image to a complex image\n\n"
}
